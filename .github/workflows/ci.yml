name: CI

on: [push, pull_request]

jobs:

  create-version-suffix:
    runs-on: ubuntu-latest
    outputs:
      version-suffix: ${{ steps.create-version-suffix.outputs.VERSION_SUFFIX }}
    steps:
    - id: create-version-suffix
      shell: pwsh
      run: |
        $versionSuffix = [System.DateTime]::UtcNow.ToString("yyyyMMddHHmmss")
        $versionString = "VERSION_SUFFIX=$versionSuffix"
        Write-Host $versionString
        Write-Output $versionString | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

  build:
    runs-on: ${{ matrix.value.os }}
    needs: create-version-suffix
    strategy:
      matrix:
        value: [{ os: windows-latest, architecture: x64 }, { os: windows-latest, architecture: arm64 }, { os: ubuntu-latest, architecture: x64 }]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-dotnet@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - uses: actions/setup-go@v5
      with:
        go-version: 1.19
    - name: promote version suffix
      shell: pwsh
      run: |
        Write-Output "VERSION_SUFFIX=${{ needs.create-version-suffix.outputs.version-suffix }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Build and test
      shell: pwsh
      run: ./build-and-test.ps1 -configuration Release -architecture ${{ matrix.value.architecture }}
    - name: publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.artifact_path }}
    - name: publish secondary artifact
      uses: actions/upload-artifact@v4
      if: env.secondary_artifact_name != ''
      with:
        name: ${{ env.secondary_artifact_name }}
        path: ${{ env.secondary_artifact_path }}

  cross_compile:
    runs-on: ubuntu-latest
    needs: create-version-suffix
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: devcontainers/ci@v0.3
      with:
        push: never
        runCmd: ./build-and-test.ps1 -configuration Release -architecture arm64
        env: |
          VERSION_SUFFIX=${{ needs.create-version-suffix.outputs.version-suffix }}
    - name: re-map path variables from container
      shell: pwsh
      run: |
        foreach ($name in @("artifact_path", "secondary_artifact_path")) {
          $existing = [System.Environment]::GetEnvironmentVariable($name)
          $updated = $existing.Replace("/workspaces/bcad", "${{ github.workspace }}")
          Write-Output "$name=$updated" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        }
    - name: publish artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact_name }}
        path: ${{ env.artifact_path }}
    - name: publish secondary artifact
      uses: actions/upload-artifact@v4
      if: env.secondary_artifact_name != ''
      with:
        name: ${{ env.secondary_artifact_name }}
        path: ${{ env.secondary_artifact_path }}

  create_package_feeds:
    runs-on: ubuntu-latest
    needs: [build, cross_compile]
    steps:
    - uses: actions/checkout@v4
      with:
        path: src
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: create package feed data
      run: ./src/create-package-feeds.sh --artifacts-directory artifacts --deb-feed-path artifacts/deb-feed.tar.gz --win-feed-path artifacts/win-feed.tar.gz
    - name: publish deb package feed artifact
      uses: actions/upload-artifact@v4
      with:
        name: deb-feed
        path: artifacts/deb-feed.tar.gz
    - name: publish win package feed artifact
      uses: actions/upload-artifact@v4
      with:
        name: win-feed
        path: artifacts/win-feed.tar.gz
